Реопорт за кодот на Сара Стефановска
Кодот се состои од четри класи. Првата класа е Edge класата која ги претставува ребрата во графот. Во оваа класа има променливи node и cap каде node e до каде оди реброто и cap e колку капацитет има реброто.
Втората класа Graph во private делот се сосоти од три целобројни промеливи nodesN, s, t каде nodesN е бројот на темиња во графот, s e start и t е sink и функција dfsUtil која наоѓа дали има аугментиран пат од s до t со помош на dfs и истовремено го пополнува residual графот. Понатаму во public делот од графот имаме конструктор и get функции за променливите, потоа имаме виртуелна функција addEdge која прима целобројни аргументи u, v, cap кои претставуваат од каде до каде оди реброто и колку капацитет има. dfs функцијата прима аргументи source, sink, вектор parent и вектор од вектори residualCapacity што претставува residual графот. Во функцијата се дефинира вектор visited со големина nodesN која ја добива од get функцијата size() во кој се зачувува кое теме е веќе посетено, потоа го сетира местото на source во векторот како true за да знаеме дека почнуваме од таму. Ја повикува dfsUtil() функцијата. Следната функција е bfs функцијата која е слична на dfs функцијата. Двете функции завршуваат кога ќе стигнеме до sink-от. Следно е fordFulkersonUtil функцијата која го користи Ford-Fulkerson алгоритмот за да одреди max flow во графот со помош на dfs функцијата. Слично и во следната функција edmondsKarpUtil, но наместо dfs ја користи bfs функцијата.
Третата класа GraphAdjList ги наследува работите од Graph класата. Прво декларираме вектор од вектор од променливи од класата Edge graph. Во конструкторот ја сетираме големината на graph на nodesN. Потоа ја повикуваме виртуелната функција addEdge со која ги додаваме ребрата во graph. Во fordFulkerson функцијата информациите од graph ги копира во residualCapacity и со помош на fordFulkersonUtil наоѓа max flow. bfsLevel функцијата го поминува графот со помош на bfs и задава левели на темињата. dfsDinic функцијата го изминува графот со помош на dfs, но смее само да оди на темиња со повисоко ниво од претходното односно не смее да се врати назад тоа го прави со if условот. dinic функцијата ги користи претходните две функции за да го имплементира dinic алгоритмот за max flow. stCut функцијата со помош на Форд-Фулкерсон го пронаоѓа ребрата со максимум капацитет и ги сече тие ребра.
Во четвртата класа GraphAdjMatrix слично ги применува алгоритмите за adjacency матрицата 